# Objetivos #############################################

1. Juego de ajedrez, con tablero, fichas, jugadores, pero sin jaque mate 
y reglas especiales.
2. En primer sprint entrega de tablero, y clase torre.
3. En segundo sprint entrega de otras dos clases.

Dos jugadores un tablero de 8x8

Un input que indique la ficha que hay que mover, desde una coordenada a la otra
- Iniciar Juego
    - Tablero iniciado
    - Fichas de cada jugador
    - Colores
- Mover ficha (el juego valida el movimiento, devuelve OK o error)
    - Fichas
    - Cooredenadas
- Fin del Juego

Una pregunta que se le da al jugador, y este diga el movimiento que ha hecho

Una comunicacion desde la interfaz cliente hacia el juego

Dos archivos, una interfaz cliente, y un juego

Archivo piezas: archivos chicos.

Puede ser una sola rama Development.

https://es.wikipedia.org/wiki/S%C3%ADmbolos_de_ajedrez_en_Unicode
print(u"\u2654")

print(u"\u25a1")


# Requisitos ############################################

- Programacion orientada a objetos (con clases)

- Documentacion (en un estilo correspondiente a una herramienta de documentacion):
    - En cada funcion, poner que hace, que pararmetros recibe y que devuelve

- Readme.md (con explicacion de que hace el repo)

- Changelog.md (descriptivo breve para saber que se hizo cada dia)

- Docker Engine, circleci, codeclimate (con nota A)

- Lo que se entrega son 5 lineas?

- Sprints de 14 días: 10 commits con 10 fechas diferentes:
    - No cumplir los commits implica recursar
    - Si en un sprint falta uno en la otra son 11
    - No puede haber commits negativos
    - El maximo de commits es 14, nos puede servir para compensar (válidos si,
    son en días diferentes)
    - SOLO UN COMMIT POR DIA ES VALIDO
    - ES VALIDO SI TIENE CAMBIOS EN EL CODIGO, si tiene solo documentacion no

- Covertura del 90% del codigo
    - Ir escribiendo los tests (TDD Test Driven Development)

- % entre los commits (Al principio van a ser cambios muy grandes,
    pero al final van a ser cambios más pequeños,
    no puede haber cambios muy grandes en el final)

